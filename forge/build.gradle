plugins {
    id 'dev.architectury.loom' version '1.2-SNAPSHOT'
    id 'idea'
    id 'maven-publish'
}
base {
    archivesName = "${mod_name}-forge-${minecraft_version}"
}

configurations {
    embed
    forgeRuntimeLibrary.extendsFrom(embed)
}

loom {
    silentMojangMappingsLicense()
    mixin {
        useLegacyMixinAp = true
        defaultRefmapName = "${mod_id}.refmap.json"
    }
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    forge {
        mixinConfigs = [
                "${mod_id}.mixins.json",
                "${mod_id}.forge.mixins.json"
        ]
        //accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

        // missing access transformers?
        // don't worry, you can still use them!
        // note that your AT *MUST* be located at
        // src/main/resources/META-INF/accesstransformer.cfg
        // to work as there is currently no config option to change this.
        // also, any names used in your access transformer will need to be
        // in SRG mapped ("func_" / "field_" with MCP class names) to work!
        // (both of these things may be subject to change in the future)
    }

    runs {
        client {
            runDir './run-client'
        }
        server {
            runDir './run-server'
        }
        configureEach {
            ideConfigGenerated(true)
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly project(":common")

    embed("org.mindrot:jbcrypt:0.4"){transitive = false}
    embed("javax.mail:mail:1.4.4"){transitive = false}
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

jar {
    from(provider { configurations.embed.collect { it.isDirectory() ? it : zipTree(it) } })
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}